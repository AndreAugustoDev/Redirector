{
  "required": false,
  "package": "com.teampotato.redirectionor.mixin",
  "compatibilityLevel": "JAVA_17",
  "minVersion": "0.8",
  "overwrites": {
    "conformVisibility": true
  },
  "mixinPriority": 10,
  "plugin": "com.teampotato.redirectionor.RedirectionorMixinPlugin",
  "refmap": "redirectionor-common-refmap.json",
  "mixins": [
    "BlockUtilMixin",
    "core.DirectionMixin$AxisMixin",
    "data.models.BlockModelGeneratorsMixin",
    "gametest.framework.GameTestHelperMixin",
    "gametest.framework.GameTestServerMixin",
    "gametest.framework.ReportGameListenerMixin",
    "gametest.framework.StructureUtilsMixin",
    "gametest.framework.TestCommandMixin",
    "gametest.framework.TestFunctionMixin",
    "server.commands.PlaceCommandMixin",
    "util.datafix.fixes.ChunkPalettedStorageFixMixin$UpgradeChunkMixin",
    "world.entity.EntityMixin",
    "world.entity.monster.ShulkerMixin",
    "world.entity.projectile.ThrownPotionMixin",
    "world.item.BoneMealItemMixin",
    "world.level.LevelMixin",
    "world.level.block.BaseCoralPlantTypeBlockMixin",
    "world.level.block.BaseFireBlockMixin",
    "world.level.block.BlockRenderShapeMixin$EntityBlockAnimated",
    "world.level.block.BlockRenderShapeMixin$Invisible",
    "world.level.block.BlockRenderShapeMixin$Model",
    "world.level.block.CactusBlockMixin",
    "world.level.block.ChorusFlowerBlockMixin",
    "world.level.block.ChorusPlantBlockMixin",
    "world.level.block.ComparatorBlockMixin",
    "world.level.block.ConcretePowderBlockMixin",
    "world.level.block.CoralBlockMixin",
    "world.level.block.DiodeBlockMixin",
    "world.level.block.FenceBlockMixin",
    "world.level.block.FireBlockMixin",
    "world.level.block.FrostedIceBlockMixin",
    "world.level.block.LeavesBlockMixin",
    "world.level.block.MirrorMixin",
    "world.level.block.RailStateMixin",
    "world.level.block.RedStoneOreBlockMixin",
    "world.level.block.RedstoneTorchBlockMixin",
    "world.level.block.RedStoneWireBlockMixin",
    "world.level.block.RespawnAnchorBlockMixin",
    "world.level.block.RotationMixin",
    "world.level.block.ScaffoldingBlockMixin",
    "world.level.block.SpongeBlockMixin",
    "world.level.block.StemBlockMixin",
    "world.level.block.SugarCaneBlockMixin",
    "world.level.block.VineBlockMixin",
    "world.level.block.entity.StructureBlockEntityMixin",
    "world.level.block.entity.TheEndGatewayBlockEntityMixin",
    "world.level.block.piston.PistonBaseBlockMixin",
    "world.level.block.piston.PistonHeadBlockMixin",
    "world.level.block.piston.PistonStructureResolverMixin",
    "world.level.block.state.CacheMixin",
    "world.level.block.state.pattern.BlockPatternMixin",
    "world.level.chunk.UpgradeDataMixin",
    "world.level.chunk.storage.IOWorkerMixin",
    "world.level.dimension.end.EndDragonFightMixin",
    "world.level.levelgen.blending.BlenderMixin",
    "world.level.levelgen.blending.BlendingDataMixin",
    "world.level.levelgen.feature.BlueIceFeatureMixin",
    "world.level.levelgen.feature.BonusChestFeatureMixin",
    "world.level.levelgen.feature.CoralClawFeatureMixin",
    "world.level.levelgen.feature.CoralFeatureMixin",
    "world.level.levelgen.feature.CoralTreeFeatureMixin",
    "world.level.levelgen.feature.DesertWellFeatureMixin",
    "world.level.levelgen.feature.EndPodiumFeatureMixin",
    "world.level.levelgen.feature.GlowstoneFeatureMixin",
    "world.level.levelgen.feature.MonsterRoomFeatureMixin",
    "world.level.levelgen.feature.TreeFeatureMixin",
    "world.level.levelgen.feature.treedecorators.CocoaDecoratorMixin",
    "world.level.levelgen.feature.trunkplacers.DarkOakTrunkPlacerMixin",
    "world.level.levelgen.feature.trunkplacers.ForkingTrunkPlacerMixin",
    "world.level.levelgen.structure.StructurePieceMixin",
    "world.level.levelgen.structure.pools.StructureTemplatePoolMixin",
    "world.level.levelgen.structure.structures.BuriedTreasurePiecesMixin$BuriedTreasurePieceMixin",
    "world.level.levelgen.structure.structures.DesertPyramidPieceMixin",
    "world.level.levelgen.structure.structures.OceanMonumentPiecesMixin$CreateMixin",
    "world.level.levelgen.structure.structures.OceanMonumentPiecesMixin$FitMixin",
    "world.level.levelgen.structure.structures.OceanMonumentPiecesMixin$MonumentBuildingMixin",
    "world.level.levelgen.structure.structures.OceanMonumentPiecesMixin$PostProcessMixin",
    "world.level.levelgen.structure.structures.WoodlandMansionPiecesMixin$MansionGridMixin",
    "world.level.levelgen.structure.structures.WoodlandMansionPiecesMixin$MansionPiecePlacerMixin",
    "world.level.levelgen.structure.templatesystem.AxisAlignedLinearPosTestMixin",
    "world.level.material.FlowingFluidMixin",
    "world.level.material.LavaFluidMixin",
    "world.level.pathfinder.SwimNodeEvaluatorMixin",
    "world.level.portal.PortalForcerMixin",
    "world.phys.shapes.DiscreteVoxelShapeMixin",
    "world.phys.shapes.ShapesMixin",
    "world.phys.shapes.VoxelShapeMixin",
    "world.ticks.TickPriorityMixin"
  ],
  "client": [
    "client.MinecraftMixin",
    "client.OptionsMixin",
    "client.gui.screens.VideoSettingsScreenMixin",
    "client.gui.screens.inventory.StructureBlockEditScreenMixin",
    "client.particle.FallingDustParticleMixin",
    "client.particle.ParticleEngineMixin",
    "client.player.LocalPlayerMixin",
    "client.renderer.LevelRendererMixin",
    "client.renderer.ScreenEffectRendererMixin",
    "client.renderer.block.BlockRenderDispatcherMixin",
    "client.renderer.block.ModelBlockRendererMixin",
    "client.renderer.block.model.FaceBakeryMixin",
    "client.renderer.chunk.ChunkRenderDispatcherMixin$RebuildTaskMixin",
    "client.renderer.chunk.ChunkRenderDispatcherMixin$RenderChunkMixin",
    "client.renderer.chunk.VisibilitySetMixin",
    "client.renderer.entity.EntityRenderDispatcherMixin",
    "client.renderer.entity.FallingBlockRendererMixin",
    "client.renderer.entity.ItemRendererMixin",
    "client.renderer.entity.MinecartRendererMixin",
    "client.resources.model.ModelBakeryMixin",
    "client.resources.model.SimpleBakedModelMixin$MixinBuilder"
  ],
  "injectors": {
    "defaultRequire": 0
  }
}